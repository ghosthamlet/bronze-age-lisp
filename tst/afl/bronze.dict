#
# AFL dictionary for the Bronze Age Lisp interpreter
# --------------------------------------------------
#
# 1) build the interpreter with instrumentation enabled:
#
#    $ build.sh 'afl-fuzz-instrumentation=#t'
#
# 2) run afl-fuzz
#
#    $ export AFL_NO_FORKSRV=1
#    $ afl-fuzz -i testcases -x bronze.dict -o /tmp/afl-findings \
#               -- ../src/build/bronze.bin -l '@@'
#

paren_000="("
paren_001=")"
paren_002="#("

singleton_000="()"
singleton_001="#T"
singleton_002="#F"
singleton_003="#inert"
singleton_004="#ignore"

char_000="#\\newline"
char_001="#\\space"
char_002="#\\x123"

number_000="1"
number_001="-99"
number_002="#x3F"
number_003="#b1010"
number_004="#o2030"
number_005="#e+infinity"

string_000="\"\""
string_001="\" \""
string_002="\"\\x32;\\xFF;""

symbol_000="||"

atmosphere_000=" "
atmosphere_001="\x0A"
atmosphere_002="#|x|#"
atmosphere_003="#;(a b c)"
atmosphere_004=";\x0A"

form_000="($lambda (x) x)"
form_001="($vau x y x)"
form_002="(+ 1 2)"
form_003="($let ((x 1)) y)"
form_004="($define! x 1)"
form_005="($set! x y z)"
form_006="(cons () ())"
form_007="#0=(+ 1 . #0#)"

ground_000="+"
ground_001="-"
ground_002="*"
ground_003="<?"
ground_004="<=?"
ground_005="=?"
ground_006=">=?"
ground_007=">?"
ground_008="abs"
ground_009="accept"
ground_010="alist->hash-table"
ground_011="and"
ground_012="$and"
ground_013="append!"
ground_014="append"
ground_015="applicative?"
ground_016="apply-continuation"
ground_017="apply"
ground_018="arithmetic-shift"
ground_019="$assert"
ground_020="assoc"
ground_021="assq"
ground_022="bigint?"
ground_023="binary-port?"
ground_024="bind"
ground_025="$bindings->environment"
ground_026="$binds?"
ground_027="binds?"
ground_028="bitwise-and"
ground_029="bitwise-ior"
ground_030="bitwise-not"
ground_031="bitwise-xor"
ground_032="boolean?"
ground_033="bytevector"
ground_034="bytevector?"
ground_035="bytevector<?"
ground_036="bytevector<=?"
ground_037="bytevector=?"
ground_038="bytevector>=?"
ground_039="bytevector>?"
ground_040="bytevector-copy"
ground_041="bytevector-copy!"
ground_042="bytevector-copy-partial"
ground_043="bytevector-copy-partial!"
ground_044="bytevector-length"
ground_045="bytevector->list"
ground_046="bytevector-port?"
ground_047="bytevector-u8-ref"
ground_048="bytevector-u8-set!"
ground_049="bytevector->vector"
ground_050="caaar"
ground_051="caaaar"
ground_052="caaadr"
ground_053="caaar"
ground_054="caadar"
ground_055="caaddr"
ground_056="caadr"
ground_057="caar"
ground_058="cadaar"
ground_059="cadadr"
ground_060="cadar"
ground_061="caddar"
ground_062="cadddr"
ground_063="caddr"
ground_064="cadr"
ground_065="call/cc"
ground_066="call-with-binary-input-file"
ground_067="call-with-binary-output-file"
ground_068="call-with-input-file"
ground_069="call-with-output-file"
ground_070="call-with-port"
ground_071="car"
ground_072="$case-lambda"
ground_073="cdaaar"
ground_074="cdaadr"
ground_075="cdaar"
ground_076="cdadar"
ground_077="cdaddr"
ground_078="cdadr"
ground_079="cdar"
ground_080="cddaar"
ground_081="cddadr"
ground_082="cddar"
ground_083="cdddar"
ground_084="cddddr"
ground_085="cdddr"
ground_086="cddr"
ground_087="cdr"
ground_088="char?"
ground_089="char<?"
ground_090="char<=?"
ground_091="char=?"
ground_092="char>=?"
ground_093="char>?"
ground_094="char-alphabetic?"
ground_095="char->digit"
ground_096="char-digit?"
ground_097="char->integer"
ground_098="char-ready?"
ground_099="char-whitespace?"
ground_100="close-input-file"
ground_101="close-input-port"
ground_102="close-output-file"
ground_103="close-output-port"
ground_104="close-port"
ground_105="close-port-ignore-errors"
ground_106="close-socket"
ground_107="collect-garbage"
ground_108="color-port?"
ground_109="combiner?"
ground_110="$cond"
ground_111="connect"
ground_112="cons"
ground_113="continuation->applicative"
ground_114="continuation?"
ground_115="copy-es"
ground_116="copy-es-immutable"
ground_117="countable-list?"
ground_118="decode-struct-sockaddr"
ground_119="$define!"
ground_120="defined-environment-variable?"
ground_121="delete-file"
ground_122="digit->char"
ground_123="disassemble-compiled-combiner"
ground_124="display"
ground_125="div-and-mod"
ground_126="div0-and-mod0"
ground_127="div"
ground_128="div0"
ground_129="$dotimes"
ground_130="dup2"
ground_131="encycle!"
ground_132="environment?"
ground_133="eof-object?"
ground_134="eq?"
ground_135="equal?"
ground_136="errno-keyword"
ground_137="error"
ground_138="error-object-message"
ground_139="error-object-irritants"
ground_140="error-object-source"
ground_141="es-symbols"
ground_142="eval"
ground_143="eval-sequence"
ground_144="eval-string"
ground_145="even?"
ground_146="execve"
ground_147="exit"
ground_148="expt"
ground_149="extend-continuation"
ground_150="file-exists?"
ground_151="file-port?"
ground_152="filter"
ground_153="find-required-filename"
ground_154="finite-list?"
ground_155="fixint?"
ground_156="flush-output-port"
ground_157="force"
ground_158="for-each"
ground_159="fork"
ground_160="formal-parameter-tree?"
ground_161="format"
ground_162="gcd"
ground_163="get-current-environment"
ground_164="get-current-error-port"
ground_165="get-current-input-port"
ground_166="get-current-jiffy"
ground_167="get-current-output-port"
ground_168="get-current-second"
ground_169="get-environment-variable"
ground_170="get-environment-variables"
ground_171="get-interpreter-arguments"
ground_172="get-library-environment"
ground_173="get-library-export-list"
ground_174="get-list-metrics"
ground_175="get-module"
ground_176="get-output-string"
ground_177="get-output-bytevector"
ground_178="get-output-bytevector-position"
ground_179="get-performance-statistics"
ground_180="getpid"
ground_181="$get-printer-flag"
ground_182="get-read-time-evaluation-environment"
ground_183="$get-registered-library"
ground_184="get-script-arguments"
ground_185="get-textual-input-position"
ground_186="guard-continuation"
ground_187="guard-dynamic-extent"
ground_188="guess-object-name"
ground_189="hash-bytevector"
ground_190="hash-table"
ground_191="hash-table->alist"
ground_192="hash-table-delete!"
ground_193="hash-table-exists?"
ground_194="hash-table-fold"
ground_195="hash-table-length"
ground_196="hash-table-keys"
ground_197="hash-table-ref"
ground_198="hash-table-set!"
ground_199="hash-table-values"
ground_200="$if"
ground_201="ignore?"
ground_202="immutable-pair?"
ground_203="$import!"
ground_204="$import-library!"
ground_205="inert?"
ground_206="input-port?"
ground_207="integer?"
ground_208="integer->char"
ground_209="integer-length"
ground_210="integer->socket"
ground_211="keyword?"
ground_212="keyword->string"
ground_213="keyword->symbol"
ground_214="$lambda"
ground_215="$lazy"
ground_216="lcm"
ground_217="length"
ground_218="$let"
ground_219="$let*"
ground_220="$let1"
ground_221="$let/cc"
ground_222="$letrec"
ground_223="$letrec*"
ground_224="$let-redirect"
ground_225="$let-safe"
ground_226="library?"
ground_227="library-name-component?"
ground_228="list"
ground_229="list*"
ground_230="list->bytevector"
ground_231="list-copy"
ground_232="listen"
ground_233="list->string"
ground_234="list->tabulate"
ground_235="list->vector"
ground_236="list-neighbors"
ground_237="list-ref"
ground_238="list-set!"
ground_239="list-tail"
ground_240="load"
ground_241="load/rte"
ground_242="make-bytevector"
ground_243="make-compiled-operative"
ground_244="make-encapsulation-type"
ground_245="make-environment"
ground_246="make-error-object"
ground_247="make-hash-function"
ground_248="make-hash-table"
ground_249="make-kernel-standard-environment"
ground_250="make-keyed-dynamic-variable"
ground_251="make-keyed-dynamic-variable*"
ground_252="make-keyed-static-variable"
ground_253="make-library"
ground_254="make-list"
ground_255="make-string"
ground_256="make-vector"
ground_257="map"
ground_258="$match"
ground_259="max"
ground_260="member?"
ground_261="memoize"
ground_262="memq?"
ground_263="merge"
ground_264="min"
ground_265="mod"
ground_266="mod0"
ground_267="mutable-pair?"
ground_268="negate"
ground_269="negative?"
ground_270="newline"
ground_271="not?"
ground_272="null?"
ground_273="number?"
ground_274="number->string"
ground_275="odd?"
ground_276="open-binary-input-file"
ground_277="open-binary-output-file"
ground_278="open-buffered-binary-input-port"
ground_279="open-buffered-binary-output-port"
ground_280="open-input-file"
ground_281="open-input-string"
ground_282="open-output-file"
ground_283="open-output-string"
ground_284="open-output-bytevector"
ground_285="open-raw-pipe"
ground_286="open-utf-decoder"
ground_287="open-utf-encoder"
ground_288="operative?"
ground_289="or?"
ground_290="$or?"
ground_291="output-port?"
ground_292="pair?"
ground_293="peek-char"
ground_294="peek-u8"
ground_295="port?"
ground_296="port-open?"
ground_297="positive?"
ground_298="print-error-object"
ground_299="promise?"
ground_300="$provide"
ground_301="$provide-library!"
ground_302="$quote"
ground_303="$quote*"
ground_304="rdtsc"
ground_305="read"
ground_306="read-bytevector"
ground_307="read-char"
ground_308="read-edit"
ground_309="read-key"
ground_310="read-u8"
ground_311="reduce"
ground_312="$register-library!"
ground_313="$registered-library?"
ground_314="register-requirement!"
ground_315="registered-requirement?"
ground_316="$remote-eval"
ground_317="require"
ground_318="reverse"
ground_319="$sequence"
ground_320="set!"
ground_321="$set!"
ground_322="set-car!"
ground_323="set-cdr!"
ground_324="setsockopt"
ground_325="shared-structure-indicator"
ground_326="signum"
ground_327="socket"
ground_328="socket?"
ground_329="socket-binary-input-port"
ground_330="socket-binary-output-port"
ground_331="socket-textual-input-port"
ground_332="socket-textual-output-port"
ground_333="sort"
ground_334="sorted?"
ground_335="string?"
ground_336="string<?"
ground_337="string<=?"
ground_338="string=?"
ground_339="string>=?"
ground_340="string>?"
ground_341="string-append"
ground_342="string->keyword"
ground_343="string-length"
ground_344="string->list"
ground_345="string->number"
ground_346="string-port?"
ground_347="string-ref"
ground_348="string-size"
ground_349="string->symbol"
ground_350="string->utf8"
ground_351="make-struct-sockaddr"
ground_352="substring"
ground_353="symbol?"
ground_354="symbol->keyword"
ground_355="symbol->string"
ground_356="system"
ground_357="tc-cbreak-noecho"
ground_358="tcgetattr"
ground_359="tcsetattr"
ground_360="terminal-port?"
ground_361="textual-port?"
ground_362="textual-input-port?"
ground_363="textual-output-port?"
ground_364="u8-ready?"
ground_365="$unless"
ground_366="$unregister-library"
ground_367="unregister-requirement!"
ground_368="utf8->string"
ground_369="unwrap"
ground_370="$vau"
ground_371="vector"
ground_372="vector?"
ground_373="vector->bytevector"
ground_374="vector->list"
ground_375="vector-length"
ground_376="vector-ref"
ground_377="vector-set!"
ground_378="waitpid"
ground_379="with-input-from-binary-file"
ground_380="with-input-from-file"
ground_381="with-input-from-port"
ground_382="with-input-from-string"
ground_383="with-noncanonical-input"
ground_384="with-output-to-binary-file"
ground_385="with-output-to-file"
ground_386="with-output-to-port"
ground_387="with-output-to-string"
ground_388="with-output-to-bytevector"
ground_389="$with-printer-flags"
ground_390="with-read-time-evaluation-environment"
ground_391="with-signal-handler"
ground_392="$with-subprocess"
ground_393="$with-subshell"
ground_394="wrap"
ground_395="write"
ground_396="write-bytevector"
ground_397="write-char"
ground_398="write-simple"
ground_399="write-string"
ground_400="write-u8"
ground_401="write-utf8-string"
ground_402="write-utf8-char"
ground_403="zero?"

keyword_000="#:||"
keyword_001="#:acc"
keyword_002="#:backspace"
keyword_003="#:call"
keyword_004="#:car"
keyword_005="#:cdr"
keyword_006="#:combine"
keyword_007="#:cons"
keyword_008="#:default"
keyword_009="#:delete"
keyword_010="#:down"
keyword_011="#:eax"
keyword_012="#:ebx"
keyword_013="#:ecx"
keyword_014="#:edi"
keyword_015="#:end"
keyword_016="#:eof"
keyword_017="#:eq"
keyword_018="#:error"
keyword_019="#:escape"
keyword_020="#:eval"
keyword_021="#:except"
keyword_022="#:exited"
keyword_023="#:export"
keyword_024="#:highlight"
keyword_025="#:higlight"
keyword_026="#:home"
keyword_027="#:if"
keyword_028="#:ignore"
keyword_029="#:inert"
keyword_030="#:inherit"
keyword_031="#:io"
keyword_032="#:ipv"
keyword_033="#:jump"
keyword_034="#:key"
keyword_035="#:left"
keyword_036="#:list"
keyword_037="#:load"
keyword_038="#:make"
keyword_039="#:no"
keyword_040="#:nohang"
keyword_041="#:only"
keyword_042="#:pair"
keyword_043="#:perf"
keyword_044="#:placed"
keyword_045="#:prefix"
keyword_046="#:primitive"
keyword_047="#:quote"
keyword_048="#:rename"
keyword_049="#:reserved"
keyword_050="#:return"
keyword_051="#:right"
keyword_052="#:set"
keyword_053="#:sigint"
keyword_054="#:signalled"
keyword_055="#:sigquit"
keyword_056="#:sigterm"
keyword_057="#:sigusr"
keyword_058="#:standard"
keyword_059="#:store"
keyword_060="#:tab"
keyword_061="#:tried"
keyword_062="#:unix"
keyword_063="#:up"
keyword_064="#:waiting"
